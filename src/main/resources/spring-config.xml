<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.1.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.1.xsd"
	default-autowire="byName">
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:datasource.properties</value>
            </list>
        </property>
    </bean>

	<context:component-scan base-package="com.guo.bill" />
	<!--<context:component-scan base-package="com.guo.*.manager.impl" />-->
	<!--<context:component-scan base-package="com.guo.*.service.impl" />-->
	<!--<context:component-scan base-package="com.guo.interceptor" />-->
	<!--<context:component-scan base-package="com.guo.cache.*" />-->
	<!--<context:component-scan base-package="com.guo.utils.*" />-->
	
    <!--
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="com.jd.jrpcore.utils.DataSourceTools.setOrgService" />
        <property name="arguments" ref="rcOrgService" />
    </bean>
	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="com.jd.jrpcore.utils.DataSourceTools.setRcBizParamService" />
        <property name="arguments" ref="rcBizParamService" />
    </bean>
    -->
	<!-- 需要引入tx的命名空间 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="${jdbc.initialSize}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
        <property name="testWhileIdle" value="${jdbc.testWhileIdle}"/>
        <property name="testOnBorrow" value="${jdbc.testOnBorrow}"/>
        <property name="testOnReturn" value="${jdbc.testOnReturn}"/>
        <property name="validationQuery" value="${jdbc.validationQuery}"/>

	</bean>
	
    <bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
	    <property name="configLocations" >
			<list>
				<value>classpath*:sqlmap/sqlmap-config.xml</value>
				
			</list>
		</property>
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!--<import resource="classpath*:spring-common.xml" />	-->
</beans>
